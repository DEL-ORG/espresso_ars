NAME: shop-product
LAST DEPLOYED: Thu Feb 29 17:28:33 2024
NAMESPACE: s6arsene
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: shop-product/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "shop-product-test-connection"
  labels:
    helm.sh/chart: shop-product-0.1.0
    app.kubernetes.io/name: shop-product
    app.kubernetes.io/instance: shop-product
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['shop-product:8091']
  restartPolicy: Never
MANIFEST:
---
# Source: shop-product/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shop-product-sa
  labels:
   app: shop-product
---
# Source: shop-product/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: shop-product-sc
type: Opaque
data:
  username: YWRtaW4=   # Base64-encoded value for "admin"
  password: cGFzc3dvcmQ=   # Base64-encoded value for "password123"
---
# Source: shop-product/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: shop-product-cm
data:
  # Key-value pairs representing your configuration data
  key1: value1
  key2: value2
  key3: value3
---
# Source: shop-product/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: espresso-shop-product-catalog-svc
  labels:
    app: shop-product
spec:
  type: ClusterIP
  ports:
    - port: 8091
      targetPort: http
      protocol: TCP
      name: http
  selector:
     app: shop-product
     version: v1
---
# Source: shop-product/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-product
  labels:
    app: shop-product
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shop-product
      version: v1
  template:
    metadata:
      labels:
        app: shop-product
        version:  v1
    spec:
      serviceAccountName:  shop-product-sa
      securityContext:
        {}
      containers:
        - name:  shop-product
          securityContext:
            {}
          image: "devopseasylearning/s6arsene:product"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}

NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace s6arsene -l "app.kubernetes.io/name=shop-product,app.kubernetes.io/instance=shop-product" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace s6arsene $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace s6arsene port-forward $POD_NAME 8080:$CONTAINER_PORT
